@model Bebeclick.Models.ExternalLoginConfirmationViewModel
@using System.Globalization
@using Bebeclick.WebClient.Resources
@using System.Linq;

@{
    ViewBag.Title = @Account.ExternalLoginTitle;
}

@section AddToHead{
    <link href="@Url.Content("~/Content/account/externalLogin.css")" rel="stylesheet" type="text/css" />
}

    <div id="__register">
        @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "pure-form pure-form-stacked", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <fieldset>
                <h1 class="bebeclick">@Account.ExternalLoginTitle</h1>
                <h3 class="bebeclick">@string.Format(Account.ExternalLoginSubtitle, ViewBag.LoginProvider)</h3>
                <p>
                    Has sido autenticado exitósamente con tu cuenta de <strong>@ViewBag.LoginProvider</strong>. En esta comunidad nos basamos en relaciones personales. Ayuda a otros usuarios a conocerte un poco mejor.
                </p>
                <div class="left">
                    @Html.LabelFor(m => m.FirstName, new { @class = "__control_label" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                    @Html.TextBoxFor(m => m.FirstName, new { id = "__firstName", required = "required" })
                    @Html.LabelFor(m => m.BirthDay, new { @class = "__control_label" })
                    @Html.ValidationMessageFor(m => m.BirthDay)
                    @Html.TextBoxFor(m => m.BirthDay, String.Format("{0:d}", Model.BirthDay.ToShortDateString()), new { id = "__birthDay", type = "date", required = "required" })
                    @Html.LabelFor(m => m.Email, new { @class = "__control_label" })
                    @Html.ValidationMessageFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { id = "__email", type = "email", required = "required" })
                </div>
                <div class="right">
                    @Html.LabelFor(m => m.LastName, new { @class = "__control_label" })
                    @Html.ValidationMessageFor(m => m.LastName)
                    @Html.TextBoxFor(m => m.LastName, new { id = "__lastName", required = "required" })
                    @Html.LabelFor(m => m.Gender, new { @class = "__control_label" })
                    @Html.ValidationMessageFor(m => m.Gender)
                    @Html.DropDownListFor(m => m.Gender, Model.Genders, new { id = "__gender", required = "required" })
                    @Html.LabelFor(m => m.State, new { @class = "__control_label" })
                    @Html.ValidationMessageFor(m => m.State)
                    @Html.DropDownListFor(m => m.State, Model.States, Account.StateSelect, new { id = "__state", required = "required" })
                    @Html.LabelFor(m => m.City, new { @class = "__control_label" })
                    @Html.ValidationMessageFor(m => m.City)
                    @Html.DropDownListFor(m => m.City, Enumerable.Empty<SelectListItem>(), Account.CitySelect, new { id = "__city", required = "required" })
                </div>
                <input id="__register_button" type="submit" value="@Account.Register" class="pure-button pure-button-primary" />
                @Html.ValidationSummary(true, Account.ExternalLoginValidationSummary, new { @class = "validation_summary" })
            </fieldset>
        }
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/Scripts/Account/externalLoginConfirmation.js")
    @if (CultureInfo.CurrentUICulture.TwoLetterISOLanguageName == "es") { 
        <script type="text/javascript">
            /* localizing calendar content to spanish language */
            $(document).ready(function () {
                $('#__birthDay').datepicker($.datepicker.regional["@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName"]);

                $('#__state').change(function () {
                    var selectedState = $(this).val();
                    if (selectedState != null && selectedState != '00000000-0000-0000-0000-000000000000') {
                        $.getJSON('@Url.Action("GetCities")', { stateId: selectedState }, function (cities) {
                            var citiesSelect = $('#__city');
                            citiesSelect.empty();
                            citiesSelect.append($('<option/>', {
                                value: '00000000-0000-0000-0000-000000000000',
                                text: '@Account.CitySelect'
                            }));
                            $.each(cities, function (index, city) {
                                citiesSelect.append($('<option/>', {
                                    value : city.value,
                                    text: city.text
                                })); 
                            });
                        });
                    }
                });
            });
        </script>
    }
}

